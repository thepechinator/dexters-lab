{% extends './_layout.nunj' %}

{% block content %}
  <h1>Destructuring</h1>

  <ul>
    <li class="text-normal slide">
      Assign vars from arrays/objects
    </li>
    <li class="text-normal slide">
      Multiple return values
    </li>
  </ul>

  <div class="slide">
    <div>
  {% call build_example() %}
// Destructuring example

// Basic concept

let a, b;

// Example 1
// destructure on an array
function exampleOne() {
  // Note the square brackets
  // around the variable names.
	[a, b] = [3, 4];

  console.log('#1', a, b);
}

// Example 2
// destructure on an object
function exampleTwo() {
  // parentheses is necessary here when we aren't
  // initializing a and b and want to destructure
  // on an object
  ({firstKey: a, secondKey: b} = {firstKey: 'something', secondKey: 'somewhere'});
  console.log('#2', a, b);
}

// Example 3
// multiple return values
function exampleThree() {
  function seekTargets() {
    return [1, 2];
  }

  [a, b] = seekTargets();
  console.log('#3', a, b);
}

// exampleOne();
// exampleTwo();
// exampleThree();
  {% endcall %}
    </div>
  </div>

  <ul class="slide">
    ref:
    <li class="text-small">
      <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" target="_blank">
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
      </a>
    </li>
  </ul>
{% endblock %}
