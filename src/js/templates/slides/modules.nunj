{% extends './_layout.nunj' %}

{% block content %}
  <h5>Modules</h5>

  <ul>
    <li class="text-normal slide">
      Built-in dependency management
    </li>
  </ul>

  <div class="slide">
    <div>
  {% call build_example() %}
// Modules example
// This code will throw a compile error since we
// haven't set up a system telling it where all these
// things are. Example is mainly to show how to do things.

// How to make a module which can be imported:
// Somewhere in src/js/lib/voltron.js
//
// A named export.
// export const DEFENDER_OF_THE_UNIVERSE = "That's me";
//
// The default export for this module.
// export default class Voltron {
//   constructor() {

//   }

//   form() {
//     return `
// Ready to form Voltron! Activate interlocks! Dyna-therms
// connected. Infra-cells up; mega-thrusters are go!
//`;
//   }

//   formBlazingSword() {
//     return 'Time for some @$$kicking!';
//   }
// }

// Then we can just import the Voltron class as:
import MyClass from 'lib/voltron';
// MyClass refers to the default export value,
// which is Voltron.
let volt = new MyClass();
console.log(volt.form());
console.log(volt.formBlazingSword());

// Import individual methods or properties from a module.
import {Voltron, DEFENDER_OF_THE_UNIVERSE} from 'lib/voltron';
console.log(DEFENDER_OF_THE_UNIVERSE);

// Import as alias. Useful for long names or method names
// that collide with the namespace you're importing into.
import {default as Voltron2, DEFENDER_OF_THE_UNIVERSE as THATS_ME}
	from 'lib/voltron';

  {% endcall %}
    </div>
  </div>

  <ul class="slide">
    <span class="text-small">ref:</span>
    <li class="text-small">
      <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import" target="_blank">
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import
      </a>
    </li>
  </ul>
{% endblock %}
