{% extends './_layout.nunj' %}

{% block content %}
  <h5>Arrow function expression</h5>

  <ul>
    <li class="text-normal slide">
      Use surrounding code's `this`
    </li>
  </ul>

  <div class="slide">
    <div>
  {% call build_example() %}
// arrow function expression example

// Make a component which we can use to attach event handlers.
$$.html('<a class="button normal small-12 js-one">Example One</a>');

// Example 1
function exampleOne() {
  console.log('#1', this);
  // Note the format. Similar to CoffeeScript.
  // You keep the brackets. Arguments go in ().
	$$.find('.js-one').click((event) => {
    // The 'this' here will now refer to the outer
    // scope's 'this', since we are using the fat arrow
    // function expression.
		console.log('#1 clicked this:', this);
  });
}

// Example 2
function exampleTwo() {
	function SuperMan() {
  	this.actions = ['fly', 'punch', 'kick', 'lazers'];
    this.enemy = 'Lex Luthor';
  }

  SuperMan.prototype.kickAss = function() {
    console.log('#2');
    // Same effect as .bind.
  	this.actions.forEach((value, index) => {
    	console.log(`SuperMan can ${value} ${this.enemy}`);
    });
  }

  new SuperMan().kickAss();
}

// exampleOne();
// exampleTwo();
  {% endcall %}
    </div>
  </div>

  <ul class="slide">
    <span class="text-small">ref:</span>
    <li class="text-small">
      <a href="https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/" target="_blank">
        https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/
      </a>
    </li>
  </ul>
{% endblock %}
