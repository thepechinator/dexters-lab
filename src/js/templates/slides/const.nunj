{% extends './_layout.nunj' %}

{% block content %}
  <h1>const</h1>

  <div class="block-normal text-normal slide">
    Constants? Say it ain't so!
  </div>

  <div class="slide">
    <div>
  {% call build_example() %}
// const example

// Example 1
// Like in many languages, once you declare a
// constant, you can't set it to anything else.
// NOTE: Using const is similar to using let in
// terms of scope.
function exampleOne() {
  {
    const IRONMAN = "Tony Stark";
    // This will throw a compile-time error in
    // Babel. Try it by uncommenting!
    // IRONMAN = "Mandarin";
  }
}

// Example 2
// Though you cannot reassign a const, that doesn't
// mean the value you set it to is itself immutable.
function exampleTwo() {
  {
    // For example, assigned to an array,
    // we can update it.
    const IRONMAN = [1, 2, 3, 4];
    console.log('#2', IRONMAN);
    IRONMAN.push(5);
    console.log(IRONMAN);

    // Same with objects.
    const IRON_PATRIOT = {punch: 'falcon'};
    console.log(IRON_PATRIOT);
    IRON_PATRIOT.fly = true;
    console.log(IRON_PATRIOT);
  }
}

// exampleOne();
// exampleTwo();
  {% endcall %}
    </div>
  </div>

  <ul>
    <li class="text-small slide">
      ref:
      <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const" target="_blank">
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const
      </a>
    </li>
  </ul>
{% endblock %}
